name: Plot Single Ticker

on:
  workflow_dispatch:
    inputs:
      ticker:
        description: "Ticker symbol (e.g., ULTY or HYLD-TO)"
        required: true
        type: string
      currency:
        description: "Currency for ticker history"
        required: true
        type: choice
        options: [USD, CAD]
        default: USD
      outdir:
        description: "Output directory for PNG files"
        required: true
        type: string
        default: graphs
      force_overwrite:
        description: "Force overwrite (re-plot even if PNG is up-to-date)?"
        required: true
        type: choice
        options: [no, yes]
        default: no
      s_price:      { description: "Show: Price on Ex-Date",                           required: true, type: choice, options: [no, yes], default: yes }
      s_dividends:  { description: "Show: Dividends",                                   required: true, type: choice, options: [no, yes], default: yes }
      s_growth:     { description: "Show: Growth of $10,000",                           required: true, type: choice, options: [no, yes], default: yes }
      s_growth_wht: { description: "Show: Growth of $10,000 (Less 15% US WHT) [USD]",   required: true, type: choice, options: [no, yes], default: yes }
      s_ann:        { description: "Show: Total Annualized Return (>=12 months)",       required: true, type: choice, options: [no, yes], default: yes }
      s_ann_wht:    { description: "Show: Ann. Return (Less 15% US WHT) [USD]",         required: true, type: choice, options: [no, yes], default: yes }
      s_yield:      { description: "Show: Annualized Yield (%) from CSV",               required: true, type: choice, options: [no, yes], default: yes }

jobs:
  plot-single:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy matplotlib yfinance requests beautifulsoup4 lxml

      - name: Build series flags
        id: flags
        env:
          CUR:        ${{ github.event.inputs.currency }}
          S_PRICE:    ${{ github.event.inputs.s_price }}
          S_DIV:      ${{ github.event.inputs.s_dividends }}
          S_GROW:     ${{ github.event.inputs.s_growth }}
          S_GROWWHT:  ${{ github.event.inputs.s_growth_wht }}
          S_ANN:      ${{ github.event.inputs.s_ann }}
          S_ANNWHT:   ${{ github.event.inputs.s_ann_wht }}
          S_YIELD:    ${{ github.event.inputs.s_yield }}
        run: |
          FLAGS=""
          [ "$S_PRICE"   = "yes" ] && FLAGS="$FLAGS --price"
          [ "$S_DIV"     = "yes" ] && FLAGS="$FLAGS --dividends"
          [ "$S_GROW"    = "yes" ] && FLAGS="$FLAGS --growth"
          if [ "$CUR" = "USD" ] && [ "$S_GROWWHT" = "yes" ]; then FLAGS="$FLAGS --growth-wht"; fi
          [ "$S_ANN"     = "yes" ] && FLAGS="$FLAGS --ann"
          if [ "$CUR" = "USD" ] && [ "$S_ANNWHT" = "yes" ]; then FLAGS="$FLAGS --ann-wht"; fi
          [ "$S_YIELD"   = "yes" ] && FLAGS="$FLAGS --yield"
          echo "flags=$FLAGS" >> "$GITHUB_OUTPUT"

      - name: Plot single ticker
        run: |
          mkdir -p "${{ github.event.inputs.outdir }}"
          FORCE=""
          [ "${{ github.event.inputs.force_overwrite }}" = "yes" ] && FORCE="--force"

          python plot_ticker_graph.py \
            "${{ github.event.inputs.ticker }}" \
            --currency "${{ github.event.inputs.currency }}" \
            --outdir "${{ github.event.inputs.outdir }}" \
            $FORCE ${{ steps.flags.outputs.flags }}

      - name: Commit and push graph
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -f "${{ github.event.inputs.outdir }}"/*.png || true
          git commit -m "Plot graph for ${{ github.event.inputs.ticker }} (${{ github.event.inputs.currency }})" || echo "Nothing to commit"
          git push || true
